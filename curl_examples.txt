# -----------------------------
# 1. Registro de Biciusuarios (Ruta: /auth/register)
# -----------------------------

# Usuario 1: Juan Pérez (Perfil Principal)
curl -X POST http://localhost:5000/auth/register -H "Content-Type: application/json" -d '{"username": "juanperez", "password": "pass123", "nombre_biciusuario": "JuanPerezCiclista"}'

# Usuario 2: María López
curl -X POST http://localhost:5000/auth/register -H "Content-Type: application/json" -d '{"username": "marialopez", "password": "pass123", "nombre_biciusuario": "MariaBiciLoca"}'

# Usuario 3: Pedro Gómez
curl -X POST http://localhost:5000/auth/register -H "Content-Type: application/json" -d '{"username": "pedrogomez", "password": "pass123", "nombre_biciusuario": "ElBichoBiker"}'

# -----------------------------
# 2. Obtener Tokens JWT (Ruta: /auth/login)
# -----------------------------
echo "Token de Juan Pérez (TOKEN):"
curl -X POST http://localhost:5000/auth/login -H "Content-Type: application/json" -d '{"username": "juanperez", "password": "pass123"}'
echo "\nToken de María López:"
curl -X POST http://localhost:5000/auth/login -H "Content-Type: application/json" -d '{"username": "marialopez", "password": "pass123"}'
echo "\nToken de Pedro Gómez:"
curl -X POST http://localhost:5000/auth/login -H "Content-Type: application/json" -d '{"username": "pedrogomez", "password": "pass123"}'


# -----------------------------
# 3. Validar token de usuario (Requiere Token)
# (Reemplaza <TOKEN> y <ID>)
# -----------------------------
Validar token:
curl -X GET http://localhost:5000/biciusuarios/$ID -H "Authorization: Bearer TOKEN"


# -----------------------------
# 4. Crear Perfil Detallado (Ruta: /biciusuarios/<id>)
# (Reemplaza <TOKEN_JUAN> y <ID_JUAN> - usualmente 1)
# -----------------------------

# Ejemplo de datos para actualizar/crear la bicicleta y el registro en el perfil de Juan
# Esto asume que el ID de Juan Pérez es 1
ID_JUAN=1 

curl -X PUT http://localhost:5000/biciusuarios/1 \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer TOKEN" \
    -d '{                                                                                      
        "nombre_biciusuario": "JuanPerezActualizado",
        "bicicletas": [                                                                        
            {"marca": "Trek", "modelo": "Domane", "color": "Rojo", "serial": "TRK12345"},      
            {"marca": "Specialized", "modelo": "Allez", "color": "Negro", "serial": "SPZ67890"}
        ],                        
        "registros": [            
            {"serial": "TRK12345"}
        ]
    }'

# -----------------------------
# 5. Consultar Rutas Protegidas (Requiere Token)
# (Reemplaza <TOKEN_JUAN> y <ID_JUAN>)
# -----------------------------

> Consulta a la lista de todos los usuarios (Ruta /auth/users):
curl -X GET http://localhost:5000/biciusuarios/ \
    -H "Authorization: Bearer TOKEN"

> Consulta del perfil de Biciusuario de Juan (Ruta /biciusuarios/<id>):
curl -X GET http://localhost:5000/biciusuarios/${ID_JUAN} \
     -H "Authorization: Bearer <TOKEN_JUAN>"

> Intento de consulta sin token (Debe fallar con 401 Unauthorized):
curl -X GET http://localhost:5000/biciusuarios/${ID_JUAN}

# -----------------------------
# 6. Borrar usuario (Requiere Token)
# (Reemplaza <TOKEN_JUAN> y <ID_JUAN>)
# -----------------------------

> Elimina el usuario y los datos relacionados: 
    curl -X DELETE http://localhost:5000/biciusuarios/$ID \
    -H "Authorization: Bearer <TU_TOKEN_MÁS_RECIENTE>"













